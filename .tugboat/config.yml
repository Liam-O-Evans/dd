services:
  # What to call the service hosting the site.
  php:
    # Use PHP 7.x with Apache; this syntax pulls in the latest version of PHP 7
    image: tugboatqa/php:7-apache

    # Set this as the default service. This does a few things
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Wait until the

    depends: mysql

    # A set of commands to run while building this service
    commands:
      # Commands that set up the basic preview infrastructure
      init:
        # Install opcache and mod-rewrite.
        - docker-php-ext-install opcache
        - a2enmod headers rewrite

        # Link the document root to the expected path. This example links /web
        # to the docroot.
        - ln -snf "${TUGBOAT_ROOT}/web" "${DOCROOT}"

        # Create the Drupal private and public files directories if they aren't
        # already present.
        - mkdir -p "${TUGBOAT_ROOT}/files-private" "${DOCROOT}/sites/default/files"

        # A common practice in many Drupal projects is to store the config and
        # private files outside of the Drupal root. If that's the case for your
        # project, you can either specify the absolute paths to those
        # directories in your settings.local.php, or you can symlink them in
        # here. Here is an example of the latter option:
        - ln -snf "${TUGBOAT_ROOT}/config" "${DOCROOT}/../config"
        - ln -snf "${TUGBOAT_ROOT}/files-private" "${DOCROOT}/../files-private"
        - wget -O /usr/local/bin/drush https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar
        - chmod +x /usr/local/bin/drush
        - echo "memory_limit = 2G" >> /usr/local/etc/php/conf.d/my-php.ini
        - composer self-update --1
      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        # Use the tugboat-specific Drupal settings.
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.local.php" "${DOCROOT}/sites/default/"
        - cp -R "${TUGBOAT_ROOT}/config/" "//var"


        # Install/update packages managed by composer, including drush.
        - composer install --optimize-autoloader

        # Copy Drupal's public files directory from an external server. The
        # public SSH key found in the Tugboat Repository configuration must be
        # copied to the external server in order to use rsync over SSH.
        #- rsync -av --delete user@example.com:/path/to/files/ "${DOCROOT}/sites/default/files/"

        # Alternatively, another common practice is to use the
        # stage_file_proxy Drupal module. This module lets Drupal serve
        # files from another publicly-accessible Drupal site instead of
        # syncing the entire files directory into the Tugboat Preview.
        # This results in smaller previews and reduces the build time.
        - composer require --dev drupal/stage_file_proxy
        - composer require drupal/google_cse
        - composer require drupal/simple_sitemap
        - composer require drupal/entity_reference_revisions
        - composer require drupal/feeds:^3.0@alpha
        - composer require drupal/youtube
        
        - composer require drupal/addtoany
        - composer require drupal/admin_toolbar
        - composer require drupal/adminimal_admin_toolbar
        - composer require drupal/adminimal_theme
        - composer require drupal/anchor_link
        - composer require drupal/better_exposed_filters:^5.0@beta
        - composer require drupal/blocache
        - composer require drupal/bootstrap_barrio
        - composer require drupal/bulk_edit_terms
        - composer require drupal/cas
        - composer require drupal/coder
        - composer require drupal/coffee
        - composer require drupal/content_moderation_notifications
        - composer require drupal/core-composer-scaffold
        - composer require drupal/core-recommended
        - composer require drupal/crop
        - composer require drupal/csv_importer
        - composer require drupal/ctools
        - composer require drupal/devel
        - composer require drupal/diff
        - composer require drupal/domain
        - composer require drupal/domain_simple_sitemap
        - composer require drupal/editor_advanced_link
        - composer require drupal/embed
        - composer require drupal/entity_browser
        - composer require drupal/entity_clone
        - composer require drupal/entity_usage
        - composer require drupal/externalauth
        - composer require drupal/fakeobjects
        - composer require drupal/feeds_ex
        - composer require drupal/feeds_ical
        - composer require drupal/feeds_tamper
        - composer require drupal/field_group
        - composer require drupal/flood_unblock
        - composer require drupal/force_password_change
        - composer require drupal/gathercontent
        - composer require drupal/google_analytics
        - composer require drupal/image_widget_crop
        - composer require drupal/imageapi_optimize
        - composer require drupal/imageapi_optimize_resmushit
        - composer require drupal/imce
        - composer require drupal/libraries
        - composer require drupal/link_attributes
        - composer require drupal/linkit
        - composer require drupal/ludwig
        - composer require drupal/mailsystem
        - composer require drupal/masquerade
        - composer require drupal/menu_block
        - composer require drupal/menu_breadcrumb
        - composer require drupal/metatag
        - composer require drupal/node_type_count
        - composer require drupal/pantheon_advanced_page_cache
        - composer require drupal/paragraphs
        - composer require drupal/paragraphs_edit
        - composer require drupal/path_redirect_import
        - composer require drupal/pathauto
        - composer require drupal/redirect
        - composer require drupal/redirect_after_login
        - composer require drupal/redis
        - composer require drupal/rules
        - composer require drupal/scanner
        - composer require drupal/search_api
        - composer require drupal/search_api_autocomplete
        - composer require drupal/search_api_solr
        - composer require drupal/sendgrid_integration
        - composer require drupal/sftp_client
        - composer require drupal/shs
        - composer require drupal/superfish
        - composer require drupal/tac_lite
        - composer require drupal/tamper
        - composer require drupal/taxonomy_import
        - composer require drupal/taxonomy_manager
        - composer require drupal/term_csv_export_import
        - composer require drupal/theme_switcher
        - composer require drupal/token
        - composer require drupal/token_filter
        - composer require drupal/twig_tweak
        - composer require drupal/typed_data
        - composer require drupal/views_autocomplete_filters
        - composer require drupal/views_bootstrap
        - composer require drupal/views_bulk_edit
        - composer require drupal/views_bulk_operations
        - composer require drupal/views_entity_form_field
        - composer require drupal/views_fieldsets
        - composer require drupal/views_show_more
        - composer require drupal/yoast_seo
        
        - composer require drush/drush
        

        # Set file permissions such that Drupal will not complain.
        - chgrp -R www-data "${DOCROOT}/sites/default/files"
        - find "${DOCROOT}/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files" -type f -exec chmod 0664 {} \;
        - drush --yes --db-url=mysql://tugboat:tugboat@mysql:3306/tugboat --account-name=admin --account-pass=admin site:install standard
        - drush pm:enable --yes stage_file_proxy
        - drush config:set --yes stage_file_proxy.settings origin "http://www.pacific.edu"
        - composer require drupal/zurb_foundation:^6.0@alpha
        - drush config-set system.theme default zurb_foundation
        - wget https://tulepond.sfo3.digitaloceanspaces.com/dump.sql
        - drush sql-cli < dump.sql
        #- drush updatedb -y
        - drush cache:rebuild
        - drush config-import --source=//var/config
      # Commands that build the site. This is where you would add things
      # like feature reverts or any other drush commands required to
      # set up or configure the site. When a preview is built from a
      # base preview, the build workflow starts here, skipping the init
      # and update steps, because the results of those are inherited
      # from the base preview.
      build:
        #- composer global require consolidation/cgr
        - composer require drush/drush
        - export PATH="$HOME/.composer/vendor/bin:$PATH"
        #- source ~/.profile
        #- cgr drush/drush
        #- wget -O drush.phar https://github.com/drush-ops/drush-launcher/releases/latest/download/drush.phar
        #- chmod +x drush.phar
        #- sudo mv drush.phar /usr/local/bin/drush
        
        - composer install --optimize-autoloader
       
        #- composer global update
        - vendor/bin/drush cache:rebuild
        #- vendor/bin/drush config:import -y
        #- vendor/bin/drush updatedb -y
        #- vendor/bin/drush cache:rebuild

  # This 'mysql' key acts as the hostname to access the service by from the php service.
  mysql:
    # Use the latest available 5.x version of MySQL
    image: tugboatqa/mariadb:10.5

    # A set of commands to run while building this service
    commands:
      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        # Copy a database dump from an external server. The public
        # SSH key found in the Tugboat Repository configuration must be
        # copied to the external server in order to use scp.
        #- scp user@example.com:database.sql.gz /tmp/database.sql.gz
        #- zcat /tmp/database.sql.gz | mysql tugboat
        #- rm /tmp/database.sql.gz
